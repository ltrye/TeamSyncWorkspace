@page
@using System.Security.Claims
@model TeamSyncWorkspace.Pages.Teams.Roles.IndexModel
@{
    ViewData["Title"] = "Team Roles Management";
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-page="/Teams/Index">My Teams</a></li>
                    <li class="breadcrumb-item"><a asp-page="/Dashboard/Index" asp-route-teamId="@Model.Team.TeamId">@Model.Team.TeamName</a></li>
                    <li class="breadcrumb-item active">Roles Management</li>
                </ol>
            </nav>
            <h1 class="display-5 mb-0">@Model.Team.TeamName - Roles Management</h1>
            <p class="text-muted mb-4">Manage team roles and member permissions</p>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.StatusMessage))
    {
        <div class="alert @(Model.StatusMessage.Contains("success") ? "alert-success" : "alert-danger") alert-dismissible fade show" role="alert">
            @Model.StatusMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <!-- Team Members Column -->
        <div class="col-md-6 mb-4">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Team Members</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Member</th>
                                    <th>Current Role</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var member in Model.TeamMembers)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="avatar me-3" style="width: 32px; height: 32px; border-radius: 50%; background-color: #@(string.Format("{0:X6}", member.User.FirstName.GetHashCode() & 0xFFFFFF)); display: flex; align-items: center; justify-content: center; color: white; font-weight: bold;">
                                                    @(member.User.FirstName[0])@(member.User.LastName[0])
                                                </div>
                                                <div>
                                                    <div>@member.User.FirstName @member.User.LastName</div>
                                                    <small class="text-muted">@member.User.Email</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <span class="badge @(member.Role == "Owner" ? "bg-danger" : 
                                                    member.Role == "Admin" ? "bg-warning text-dark" :
                                                    member.Role == "Member" ? "bg-primary" : 
                                                    member.Role == "Viewer" ? "bg-secondary" : "bg-info")">
                                                @member.Role
                                            </span>
                                        </td>
                                        <td>
                                            @if (Model.CanManageRoles && (member.Role != "Owner" || member.UserId == int.Parse(User.FindFirst(ClaimTypes.NameIdentifier).Value)))
                                            {
                                                <div class="dropdown">
                                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton@(member.UserId)" data-bs-toggle="dropdown" aria-expanded="false">
                                                        Change Role
                                                    </button>
                                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton@(member.UserId)">
                                                        @foreach (var role in Model.Roles)
                                                        {
                                                            @if (role.Name != member.Role)
                                                            {
                                                                <li>
                                                                    <form method="post" asp-page-handler="ChangeRole">
                                                                        <input type="hidden" name="teamId" value="@Model.Team.TeamId" />
                                                                        <input type="hidden" name="userId" value="@member.UserId" />
                                                                        <input type="hidden" name="newRole" value="@role.Name" />
                                                                        <button type="submit" class="dropdown-item">@role.Name</button>
                                                                    </form>
                                                                </li>
                                                            }
                                                        }
                                                    </ul>
                                                </div>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Roles Column -->
        <div class="col-md-6 mb-4">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Available Roles</h5>
                    @if (Model.CanManageRoles)
                    {
                        <button class="btn btn-sm btn-light" data-bs-toggle="modal" data-bs-target="#createRoleModal">
                            <i class="bi bi-plus-circle me-1"></i> Create Custom Role
                        </button>
                    }
                </div>
                <div class="card-body">
                    <div class="accordion" id="rolesAccordion">
                        @foreach (var role in Model.Roles)
                        {
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="heading@(role.RoleId)">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse@(role.RoleId)" aria-expanded="false" aria-controls="collapse@(role.RoleId)">
                                        <div class="d-flex justify-content-between align-items-center w-100 me-3">
                                            <span>
                                                <span class="badge @(role.Name == "Owner" ? "bg-danger" : 
                                                        role.Name == "Admin" ? "bg-warning text-dark" :
                                                        role.Name == "Member" ? "bg-primary" : 
                                                        role.Name == "Viewer" ? "bg-secondary" : "bg-info") me-2">
                                                    @role.Name
                                                </span>
                                                @role.Description
                                            </span>
                                            <span class="badge bg-secondary">@(role.Permissions?.Count ?? 0) permissions</span>
                                        </div>
                                    </button>
                                </h2>
                                <div id="collapse@(role.RoleId)" class="accordion-collapse collapse" aria-labelledby="heading@(role.RoleId)" data-bs-parent="#rolesAccordion">
                                    <div class="accordion-body">
                                        <div class="d-flex justify-content-between mb-3">
                                            <h6 class="mb-0">Permissions</h6>
                                            @if (Model.CanManageRoles && role.Name != "Owner" && role.Name != "Admin" && role.Name != "Member" && role.Name != "Viewer")
                                            {
                                                <div>
                                                    <button type="button" class="btn btn-sm btn-outline-primary me-1" 
                                                            data-bs-toggle="modal" data-bs-target="#editRoleModal" 
                                                            data-role-id="@role.RoleId" 
                                                            data-role-name="@role.Name" 
                                                            data-role-description="@role.Description"
                                                            data-role-permissions="@string.Join(",", role.Permissions.Select(p => p.Action))">
                                                        <i class="bi bi-pencil"></i> Edit
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-danger" 
                                                            data-bs-toggle="modal" data-bs-target="#deleteRoleModal" 
                                                            data-role-id="@role.RoleId" 
                                                            data-role-name="@role.Name">
                                                        <i class="bi bi-trash"></i> Delete
                                                    </button>
                                                </div>
                                            }
                                        </div>
                                        <div class="row g-2">
                                            @foreach (var permission in role.Permissions)
                                            {
                                                <div class="col-md-6">
                                                    <div class="card bg-light">
                                                        <div class="card-body py-2 px-3">
                                                            <small>@permission.Action</small>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.CanManageRoles)
{
    <!-- Create Custom Role Modal -->
    <div class="modal fade" id="createRoleModal" tabindex="-1" aria-labelledby="createRoleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form method="post" asp-page-handler="CreateRole" asp-route-teamId="@Model.Team.TeamId">
                    <div class="modal-header">
                        <h5 class="modal-title" id="createRoleModalLabel">Create Custom Role</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="roleName" class="form-label">Role Name</label>
                            <input type="text" class="form-control" id="roleName" name="CustomRole.Name" required maxlength="30">
                            <div class="form-text">Choose a descriptive name for this role (e.g., "Project Manager", "Content Editor")</div>
                        </div>
                        <div class="mb-3">
                            <label for="roleDescription" class="form-label">Description</label>
                            <input type="text" class="form-control" id="roleDescription" name="CustomRole.Description" required maxlength="100">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Permissions</label>
                            <div class="row g-3">
                                @foreach (var permission in Model.AvailablePermissions)
                                {
                                    <div class="col-md-6">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="perm_@permission.action" name="CustomRole.Permissions" value="@permission.action">
                                            <label class="form-check-label" for="perm_@permission.action">
                                                <strong>@permission.action</strong>
                                                <div class="text-muted small">@permission.description</div>
                                            </label>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Create Role</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Role Modal -->
    <div class="modal fade" id="editRoleModal" tabindex="-1" aria-labelledby="editRoleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form method="post" asp-page-handler="UpdateRole" asp-route-teamId="@Model.Team.TeamId">
                    <input type="hidden" id="editRoleId" name="roleId" value="">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editRoleModalLabel">Edit Role</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="editRoleName" class="form-label">Role Name</label>
                            <input type="text" class="form-control" id="editRoleName" name="CustomRole.Name" required maxlength="30">
                        </div>
                        <div class="mb-3">
                            <label for="editRoleDescription" class="form-label">Description</label>
                            <input type="text" class="form-control" id="editRoleDescription" name="CustomRole.Description" required maxlength="100">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Permissions</label>
                            <div class="row g-3">
                                @foreach (var permission in Model.AvailablePermissions)
                                {
                                    <div class="col-md-6">
                                        <div class="form-check">
                                            <input class="form-check-input edit-permission" type="checkbox" id="edit_perm_@permission.action" name="CustomRole.Permissions" value="@permission.action">
                                            <label class="form-check-label" for="edit_perm_@permission.action">
                                                <strong>@permission.action</strong>
                                                <div class="text-muted small">@permission.description</div>
                                            </label>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Delete Role Modal -->
    <div class="modal fade" id="deleteRoleModal" tabindex="-1" aria-labelledby="deleteRoleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form method="post" asp-page-handler="DeleteRole" asp-route-teamId="@Model.Team.TeamId">
                    <input type="hidden" id="deleteRoleId" name="roleId" value="">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteRoleModalLabel">Delete Role</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete the role <strong id="deleteRoleName"></strong>?</p>
                        <p class="text-danger">This action cannot be undone. This role will be permanently deleted.</p>
                        <p>Note: You cannot delete a role that is currently assigned to team members.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Delete Role</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                // Edit role modal
                const editRoleModal = document.getElementById('editRoleModal');
                if (editRoleModal) {
                    editRoleModal.addEventListener('show.bs.modal', function(event) {
                        const button = event.relatedTarget;
                        const roleId = button.getAttribute('data-role-id');
                        const roleName = button.getAttribute('data-role-name');
                        const roleDescription = button.getAttribute('data-role-description');
                        const rolePermissions = button.getAttribute('data-role-permissions').split(',');
                        
                        document.getElementById('editRoleId').value = roleId;
                        document.getElementById('editRoleName').value = roleName;
                        document.getElementById('editRoleDescription').value = roleDescription;
                        
                        // Reset all checkboxes
                        document.querySelectorAll('.edit-permission').forEach(checkbox => {
                            checkbox.checked = false;
                        });
                        
                        // Check boxes based on role permissions
                        rolePermissions.forEach(permission => {
                            const checkbox = document.getElementById(`edit_perm_${permission}`);
                            if (checkbox) {
                                checkbox.checked = true;
                            }
                        });
                    });
                }
                
                // Delete role modal
                const deleteRoleModal = document.getElementById('deleteRoleModal');
                if (deleteRoleModal) {
                    deleteRoleModal.addEventListener('show.bs.modal', function(event) {
                        const button = event.relatedTarget;
                        const roleId = button.getAttribute('data-role-id');
                        const roleName = button.getAttribute('data-role-name');
                        
                        document.getElementById('deleteRoleId').value = roleId;
                        document.getElementById('deleteRoleName').textContent = roleName;
                    });
                }
            });
        </script>
    }
}