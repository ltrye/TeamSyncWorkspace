@page
@model TeamSyncWorkspace.Pages.Dashboard.IndexModel

@using TeamSyncWorkspace.Models
@{
    ViewData["Title"] = $"{Model.Team.TeamName} Dashboard";
}

<div class="container is-fluid">
    <div class="section pt-4 pb-2">
        <div class="level">
            <div class="level-left">
                <div class="level-item">
                    <div>
                        <h1 class="title is-3">@Model.Team.TeamName</h1>
                        <p class="subtitle is-6 has-text-grey">Team Workspace</p>
                    </div>
                </div>
            </div>
            <div class="level-right">
                <div class="level-item">
                    <span class="tag is-medium is-light">Created @Model.Team.CreatedDate.ToString("MMMM dd, yyyy")</span>
                </div>
            </div>
        </div>
        
        @if (!string.IsNullOrEmpty(Model.StatusMessage))
        {
            <div class="notification @(Model.StatusMessage.StartsWith("Error") ? "is-danger is-light" : "is-success is-light")">
                <button class="delete"></button>
                @Model.StatusMessage
            </div>
        }
    </div>

    <div class="columns">
        <!-- Left sidebar with team members -->
        <div class="column is-3">
            <div class="box has-shadow p-0">
                <div class="p-4 has-background-white-bis">
                    <p class="title is-5 mb-2">Team Members</p>
                    <p class="subtitle is-7 has-text-grey mb-0">@Model.TeamMembers.Count members in this team</p>
                </div>
                <div class="px-0 py-2">
                    @foreach (var member in Model.TeamMembers)
                    {
                        <div class="list-item px-4">
                            <div class="is-flex is-align-items-center">
                                <img src="https://ui-avatars.com/api/?name=@(Uri.EscapeDataString($"{member.User.FirstName} {member.User.LastName}"))&size=32&background=E5E5E5&color=707070" 
                                     class="image is-32x32 is-rounded mr-3" alt="Avatar" />
                                <div>
                                    <span class="has-text-weight-medium">@member.User.FirstName @member.User.LastName</span>
                                    <p class="has-text-grey is-size-7 mb-0">Joined @member.JoinedDate.ToString("MMM dd, yyyy")</p>
                                </div>
                            </div>
                            @if (member.UserId == Model.TeamMembers.First().UserId)
                            {
                                <span class="tag is-light">Admin</span>
                            }
                        </div>
                    }
                </div>
                @if (Model.IsTeamAdmin)
                {
                    <div class="px-4 py-3 has-background-white-bis">
                        <form method="post" asp-page-handler="Invite" asp-route-teamId="@Model.Team.TeamId">
                            <div class="field has-addons">
                                <div class="control is-expanded">
                                    <input type="email" asp-for="InviteEmail" class="input is-small" placeholder="Email to invite" required>
                                    <input type="hidden" name="teamId" value="@Model.Team.TeamId" />
                                </div>
                                <div class="control">
                                    <button type="submit" class="button is-small is-info">Invite</button>
                                </div>
                            </div>
                            <div asp-validation-summary="All" class="help is-danger mt-1"></div>
                        </form>
                    </div>
                }
            </div>

                <div class="box has-shadow p-0 mt-5">
                    <div class="p-4 has-background-white-bis">
                        <p class="title is-5 mb-0">Workspace </p>
                    </div>
                    <div>
                           <a href="/Teams/Members/Index?teamId=@Model.Team.TeamId" class="admin-menu-item">
    <span class="icon has-text-grey"><i class="bi bi-people"></i></span>
    <div>
        <span class="has-text-weight-medium">Members</span>
        <p class="is-size-7 has-text-grey mb-0">Team members</p>
    </div>
</a>
                        
                        

                            <a href="/Teams/Roles/Index?teamId=@Model.Team.TeamId" class="admin-menu-item">
                                <span class="icon has-text-grey"><i class="bi bi-shield-lock"></i></span>
                                <div>
                                    <span class="has-text-weight-medium">Roles & Permissions</span>
                                    <p class="is-size-7 has-text-grey mb-0">Access controls</p>
                                </div>
                            </a>
                        
            @if (Model.IsTeamAdmin || await Model.CanUserPerformAction(ActivityType.ManageTeam) || 
                await Model.CanUserPerformAction(ActivityType.ManageRoles) || 
                await Model.CanUserPerformAction(ActivityType.InviteMembers))
            {
                        
                        @if (Model.IsTeamAdmin || await Model.CanUserPerformAction(ActivityType.ManageTeam))
                        {
                            <a href="/Teams/Settings/Index?teamId=@Model.Team.TeamId" class="admin-menu-item">
                                <span class="icon has-text-grey"><i class="bi bi-gear"></i></span>
                                <div>
                                    <span class="has-text-weight-medium">Team Settings</span>
                                    <p class="is-size-7 has-text-grey mb-0">Configure team options</p>
                                </div>
                            </a>
                        }
            }
                    </div>
                </div>
        </div>

        <!-- Main content area -->
        <div class="column is-9">
            <!-- Workspace Section -->
            <div class="box has-shadow">
                @if (Model.Workspace == null)
                {
                    <div class="has-text-centered py-5">
                        <i class="bi bi-folder-x" style="font-size: 3rem; color: #dbdbdb;"></i>
                        <p class="mt-3">Workspace not found. Please contact an administrator.</p>
                    </div>
                }
                else
                {
                    <div class="level mb-5">
                        <div class="level-left">
                            <div class="level-item">
                                <div>
                                    <h3 class="title is-4">@Model.Workspace.WorkspaceName</h3>
                                    <p class="subtitle is-6 has-text-grey mb-1">@Model.Workspace.Description</p>
                                    <p class="has-text-grey-light is-size-7">
                                        <span class="icon is-small"><i class="bi bi-clock"></i></span>
                                        Created on @Model.Workspace.CreatedDate.ToString("MMMM dd, yyyy")
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="level-right">
                            @if (Model.IsTeamAdmin)
                            {
                                <div class="level-item">
                                    <button class="button is-small is-light js-modal-trigger" data-target="editWorkspaceModal">
                                        <span class="icon is-small"><i class="bi bi-pencil"></i></span>
                                        <span>Edit</span>
                                    </button>
                                </div>
                            }
                            <div class="level-item">
                                <span class="tag is-light">ID: @Model.Workspace.WorkspaceId.Substring(0, 8)</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="columns is-multiline">
                        <div class="column is-4">
                            <div class="box has-shadow workspace-box">
                                <div class="has-text-centered mb-4">
                                    <span class="icon-large has-text-info">
                                        <i class="bi bi-file-earmark-text"></i>
                                    </span>
                                </div>
                                <h5 class="title is-5 has-text-centered mb-2">Documents</h5>
                                <p class="has-text-centered has-text-grey mb-4">Collaborate with your team on documents</p>
                                <a href="/Documents/Index?workspaceId=@Model.Workspace.WorkspaceId" class="button is-info is-light is-fullwidth">
                                    Open Documents
                                </a>
                            </div>
                        </div>
                        
                        <div class="column is-4">
                            <div class="box has-shadow workspace-box">
                                <div class="has-text-centered mb-4">
                                    <span class="icon-large has-text-success">
                                        <i class="bi bi-folder2-open"></i>
                                    </span>
                                </div>
                                <h5 class="title is-5 has-text-centered mb-2">File Storage</h5>
                                <p class="has-text-centered has-text-grey mb-4">Access and share files securely</p>
                                <a href="/Files/Index?workspaceId=@Model.Workspace.WorkspaceId" class="button is-success is-light is-fullwidth">
                                    Browse Files
                                </a>
                            </div>
                        </div>
                        
                        <div class="column is-4">
                            <div class="box has-shadow workspace-box">
                                <div class="has-text-centered mb-4">
                                    <span class="icon-large has-text-link">
                                        <i class="bi bi-calendar-check"></i>
                                    </span>
                                </div>
                                <h5 class="title is-5 has-text-centered mb-2">Timeline</h5>
                                <p class="has-text-centered has-text-grey mb-4">View and manage your team's schedule</p>
                                <a href="/Dashboard/Timeline/Index?workspaceId=@Model.Workspace.WorkspaceId" class="button is-link is-light is-fullwidth">
                                    View Timeline
                                </a>
                                @* <a asp-page="/Timeline/Index" asp-route-workspaceId="@Model.Workspace.WorkspaceId" class="button is-link is-light is-fullwidth">
                                    View Timeline
                                </a> *@

                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Edit Workspace Modal -->
@if (Model.IsTeamAdmin)
{
    <div class="modal" id="editWorkspaceModal">
        <div class="modal-background"></div>
        <div class="modal-card">
            <form method="post" asp-page-handler="UpdateWorkspace" asp-route-teamId="@Model.Team.TeamId">
                <header class="modal-card-head">
                    <p class="modal-card-title">Edit Workspace</p>
                    <button type="button" class="delete" aria-label="close"></button>
                </header>
                <section class="modal-card-body">
                    <input type="hidden" name="WorkspaceId" value="@Model.Workspace?.WorkspaceId" />
                    <div class="field">
                        <label class="label" for="workspaceName">Workspace Name</label>
                        <div class="control">
                            <input type="text" class="input" id="workspaceName" name="WorkspaceName" value="@Model.Workspace?.WorkspaceName" required>
                        </div>
                    </div>
                    <div class="field">
                        <label class="label" for="workspaceDescription">Description</label>
                        <div class="control">
                            <textarea class="textarea" id="workspaceDescription" name="Description" rows="3">@Model.Workspace?.Description</textarea>
                        </div>
                    </div>
                </section>
                <footer class="modal-card-foot">
                    <button type="submit" class="button is-info">Save Changes</button>
                    <button type="button" class="button is-light">Cancel</button>
                </footer>
            </form>
        </div>
    </div>
}

@section Styles {
    <link rel="stylesheet" href="~/lib/bulma/css/bulma.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
        /* Professional Design Styles */
        body {
            background-color: #f9fafb;
            color: #333;
        }
        
        .has-shadow {
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
            transition: box-shadow 0.3s ease;
        }
        
        .has-shadow:hover {
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }
        
        .workspace-box {
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }
        
        .icon-large {
            font-size: 2.5rem;
            display: inline-block;
            height: 64px;
            width: 64px;
            line-height: 64px;
            background-color: rgba(72, 95, 199, 0.1);
            border-radius: 50%;
        }
        
        .icon-large.has-text-info {
            background-color: rgba(32, 156, 238, 0.1);
        }
        
        .icon-large.has-text-success {
            background-color: rgba(35, 209, 96, 0.1);
        }
        
        .icon-large.has-text-link {
            background-color: rgba(50, 115, 220, 0.1);
        }
        
        .list-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem;
            border-bottom: 1px solid #f5f5f5;
        }
        
        .list-item:last-child {
            border-bottom: none;
        }
        
        .admin-menu-item {
            display: flex;
            align-items: center;
            padding: 1rem 1.5rem;
            border-bottom: 1px solid #f5f5f5;
            transition: background-color 0.2s ease;
        }
        
        .admin-menu-item:last-child {
            border-bottom: none;
        }
        
        .admin-menu-item:hover {
            background-color: #f9f9f9;
        }
        
        .admin-menu-item .icon {
            margin-right: 1rem;
        }
        
        .notification button.delete {
            position: absolute;
            right: 0.5rem;
            top: 0.5rem;
        }
        
        /* Subtle color adjustments */
        .button.is-info {
            background-color: #4a68bd;
        }
        
        .button.is-info.is-light {
            background-color: #f0f4ff;
            color: #4a68bd;
        }
        
        .button.is-success.is-light {
            background-color: #f0faf4;
            color: #3a9e6d;
        }
        
        .button.is-link.is-light {
            background-color: #f0f4fa;
            color: #3662b5;
        }
        
        /* Add any dashboard-specific styles here */
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Delete notification functionality
            (document.querySelectorAll('.notification .delete') || []).forEach(($delete) => {
                const $notification = $delete.parentNode;
                $delete.addEventListener('click', () => {
                    $notification.parentNode.removeChild($notification);
                });
            });
            
            // Modal functionality
            function openModal($el) {
                $el.classList.add('is-active');
            }

            function closeModal($el) {
                $el.classList.remove('is-active');
            }

            function closeAllModals() {
                (document.querySelectorAll('.modal') || []).forEach(($modal) => {
                    closeModal($modal);
                });
            }

            // Open modal triggers
            (document.querySelectorAll('.js-modal-trigger') || []).forEach(($trigger) => {
                const modal = $trigger.dataset.target;
                const $target = document.getElementById(modal);

                $trigger.addEventListener('click', () => {
                    openModal($target);
                });
            });

            // Close modal elements
            (document.querySelectorAll('.modal-background, .modal-card-head .delete, .modal-card-foot .button.is-light') || []).forEach(($close) => {
                const $target = $close.closest('.modal');

                $close.addEventListener('click', () => {
                    closeModal($target);
                });
            });

            // Keyboard event to close modals
            document.addEventListener('keydown', (event) => {
                if (event.keyCode === 27) { // Escape key
                    closeAllModals();
                }
            });
        });
        
        // Any dashboard-specific scripts
    </script>
}