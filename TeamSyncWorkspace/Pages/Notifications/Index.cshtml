@page
@model TeamSyncWorkspace.Pages.Notifications.IndexModel
@{
    ViewData["Title"] = "Notifications";
}

<div class="container is-fluid">
    <div class="section pt-4 pb-2">
        <div class="level">
            <div class="level-left">
                <div class="level-item">
                    <h1 class="title is-3">Your Notifications</h1>
                </div>
            </div>
            <div class="level-right">
                <div class="level-item">
                    @if (Model.Notifications.Any(n => !n.IsRead))
                    {
                        <a asp-page="./Index" asp-page-handler="MarkAllAsRead" class="button is-info is-light">
                            <span class="icon">
                                <i class="bi bi-check-all"></i>
                            </span>
                            <span>Mark all as read</span>
                        </a>
                    }
                </div>
            </div>
        </div>
        
        @if (!string.IsNullOrEmpty(Model.StatusMessage))
        {
            <div class="notification is-success is-light">
                <button class="delete"></button>
                @Model.StatusMessage
            </div>
        }

        @if (!Model.Notifications.Any())
        {
            <div class="box has-text-centered py-6 has-shadow">
                <span class="icon is-large has-text-grey mb-4">
                    <i class="bi bi-bell-slash" style="font-size: 3rem;"></i>
                </span>
                <p class="subtitle is-4 has-text-grey">You don't have any notifications</p>
            </div>
        }
        else
        {
            <div class="box p-0 has-shadow">
                @foreach (var notification in Model.Notifications)
                {
                    <div class="notification-item p-4 @(notification.IsRead ? "" : "has-background-light")" style="border-bottom: 1px solid #f5f5f5;">
                        <div class="columns is-vcentered is-mobile">
                            <div class="column">
                                <div class="is-flex is-align-items-center mb-2">
                                    <span class="icon mr-2 @(notification.IsRead ? "has-text-grey" : GetIconColorClass(notification.Type))">
                                        <i class="bi @GetIconClass(notification.Type)"></i>
                                    </span>
                                    <h5 class="is-size-5 has-text-weight-medium mb-0">@notification.Title</h5>
                                </div>
                                <p class="mb-2">@notification.Message</p>
                                <small class="has-text-grey">@notification.CreatedDate.ToString("MMM d, yyyy 'at' h:mm tt")</small>
                            </div>
                            <div class="column is-narrow">
                                <div class="buttons are-small">
                                    @if (!notification.IsRead)
                                    {
                                        <a asp-page="./Index" asp-page-handler="MarkAsRead" asp-route-id="@notification.NotificationId"
                                           class="button is-info is-light" title="Mark as read">
                                            <span class="icon">
                                                <i class="bi bi-check"></i>
                                            </span>
                                        </a>
                                    }

                                    @if (!string.IsNullOrEmpty(notification.Link))
                                    {
                                        <a href="@notification.Link" class="button is-info">
                                            <span class="icon">
                                                <i class="bi bi-box-arrow-up-right"></i>
                                            </span>
                                            <span>View</span>
                                        </a>
                                    }

                                    <a asp-page="./Index" asp-page-handler="Delete" asp-route-id="@notification.NotificationId"
                                       class="button is-danger is-light" title="Delete"
                                       onclick="return confirm('Are you sure you want to delete this notification?');">
                                        <span class="icon">
                                            <i class="bi bi-trash"></i>
                                        </span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@functions {
    private string GetIconClass(string type)
    {
        return type switch
        {
            "TeamInvitation" => "bi-people-fill",
            "InvitationAccepted" => "bi-check-circle-fill",
            "InvitationDeclined" => "bi-x-circle-fill",
            _ => "bi-bell-fill"
        };
    }

    private string GetIconColorClass(string type)
    {
        return type switch
        {
            "TeamInvitation" => "has-text-info",
            "InvitationAccepted" => "has-text-success",
            "InvitationDeclined" => "has-text-danger",
            _ => "has-text-grey"
        };
    }
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Notification delete functionality
            (document.querySelectorAll('.notification .delete') || []).forEach(($delete) => {
                const $notification = $delete.closest('.notification');
                $delete.addEventListener('click', () => {
                    $notification.classList.add('is-hidden-fade-out');
                    setTimeout(() => {
                        if ($notification.parentNode) {
                            $notification.parentNode.removeChild($notification);
                        }
                    }, 500);
                });
            });
        });
    </script>
}

@section Styles {
    <style>
        .notification-item:last-child {
            border-bottom: none !important;
        }

        .has-shadow {
            box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);
        }

        .is-hidden-fade-out {
            animation: fadeOut 0.5s;
            animation-fill-mode: forwards;
        }
        
        @@keyframes fadeOut {
            from {
                opacity: 1;
                max-height: 200px;
                margin-bottom: 1.5rem;
                padding: 1.25rem 2.5rem 1.25rem 1.5rem;
            }
            to {
                opacity: 0;
                max-height: 0;
                margin-bottom: 0;
                padding: 0;
                border: 0;
            }
        }
    </style>
}